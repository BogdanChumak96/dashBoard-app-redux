{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Downloads\\\\static-job-listings-master\\\\static-job-listings-master\\\\src\\\\components\\\\JobPosition.jsx\";\nimport PropTypes from 'prop-types';\nimport { Badge } from 'UI/Badge';\nimport { Card } from 'UI/Card';\nimport { Stack } from 'UI/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobPosition = _ref => {\n  let {\n    id,\n    company,\n    logo,\n    new: isNew,\n    featured,\n    position,\n    role,\n    level,\n    postedAt,\n    contract,\n    location,\n    languages,\n    tools\n  } = _ref;\n  const badges = [].concat(role, level, ...languages, ...tools);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isFeatured: featured,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-position\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-position-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"job-position-avatar\",\n          src: logo,\n          alt: company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-position-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-postion-company\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), (isNew || featured) && /*#__PURE__*/_jsxDEV(Stack, {\n              children: [isNew && /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"rounded\",\n                colorScheme: \"primary\",\n                children: \"NEW!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this), featured && /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"rounded\",\n                colorScheme: \"dark\",\n                children: \"FEATURED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"job-position-title\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: postedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: contract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: badges.map(item => /*#__PURE__*/_jsxDEV(Badge, {\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = JobPosition;\nexport { JobPosition };\nJobPosition.propTypes = {\n  id: PropTypes.number,\n  company: PropTypes.string,\n  logo: PropTypes.string,\n  new: PropTypes.bool,\n  featured: PropTypes.bool,\n  position: PropTypes.string,\n  role: PropTypes.string,\n  level: PropTypes.string,\n  postedAt: PropTypes.string,\n  contract: PropTypes.string,\n  location: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string),\n  tools: PropTypes.arrayOf(PropTypes.string)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPosition\");","map":{"version":3,"names":["PropTypes","Badge","Card","Stack","JobPosition","id","company","logo","new","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","badges","concat","map","item","propTypes","number","string","bool","arrayOf"],"sources":["C:/Users/Bogdan/Downloads/static-job-listings-master/static-job-listings-master/src/components/JobPosition.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Badge } from 'UI/Badge';\nimport { Card } from 'UI/Card';\nimport { Stack } from 'UI/Stack';\n\nconst JobPosition = ({\n  id,\n  company,\n  logo,\n  new: isNew,\n  featured,\n  position,\n  role,\n  level,\n  postedAt,\n  contract,\n  location,\n  languages,\n  tools,\n}) => {\n  const badges = [].concat(role, level, ...languages, ...tools);\n\n  return (\n    <Card isFeatured={featured}>\n      <div className='job-position'>\n        <div className='job-position-info'>\n          <img\n            className='job-position-avatar'\n            src={logo}\n            alt={company}\n          />\n          <div className='job-position-body'>\n            <div className='job-postion-company'>\n              <h3>{company}</h3>\n              {(isNew || featured) && (\n                <Stack>\n                  {isNew && (\n                    <Badge variant=\"rounded\" colorScheme=\"primary\">\n                      NEW!\n                    </Badge>\n                  )}\n                  {featured && (\n                    <Badge variant=\"rounded\" colorScheme=\"dark\">\n                      FEATURED\n                    </Badge>\n                  )}\n                </Stack>\n              )}\n            </div>\n            <h2 className='job-position-title'>\n              {position}\n            </h2>\n            <Stack>\n              <div className='job-position-meta'>\n                {postedAt}\n              </div>\n              <div className='job-position-meta'>\n                {contract}\n              </div>\n              <div className='job-position-meta'>\n                {location}\n              </div>\n            </Stack>\n          </div>\n        </div>\n        <Stack>\n          {badges.map(item => (\n            <Badge key={item}>{item}</Badge>\n          ))}\n        </Stack>\n      </div>\n    </Card>\n  )\n}\n\nexport {JobPosition};\n\nJobPosition.propTypes = {\n  id: PropTypes.number,\n  company: PropTypes.string,\n  logo: PropTypes.string,\n  new: PropTypes.bool,\n  featured: PropTypes.bool,\n  position: PropTypes.string,\n  role: PropTypes.string,\n  level: PropTypes.string,\n  postedAt: PropTypes.string,\n  contract: PropTypes.string,\n  location: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string),\n  tools: PropTypes.arrayOf(PropTypes.string),\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}